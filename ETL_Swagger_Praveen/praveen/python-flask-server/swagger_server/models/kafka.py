# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Kafka(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, feed_name: str=None, kafka_topic: str=None, bootstrap_servers: str=None, dml: str=None):  # noqa: E501
        """Kafka - a model defined in Swagger

        :param feed_name: The feed_name of this Kafka.  # noqa: E501
        :type feed_name: str
        :param kafka_topic: The kafka_topic of this Kafka.  # noqa: E501
        :type kafka_topic: str
        :param bootstrap_servers: The bootstrap_servers of this Kafka.  # noqa: E501
        :type bootstrap_servers: str
        :param dml: The dml of this Kafka.  # noqa: E501
        :type dml: str
        """
        self.swagger_types = {
            'feed_name': str,
            'kafka_topic': str,
            'bootstrap_servers': str,
            'dml': str
        }

        self.attribute_map = {
            'feed_name': 'feedName',
            'kafka_topic': 'kafkaTopic',
            'bootstrap_servers': 'bootstrapServers',
            'dml': 'dml'
        }

        self._feed_name = feed_name
        self._kafka_topic = kafka_topic
        self._bootstrap_servers = bootstrap_servers
        self._dml = dml

    @classmethod
    def from_dict(cls, dikt) -> 'Kafka':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Kafka of this Kafka.  # noqa: E501
        :rtype: Kafka
        """
        return util.deserialize_model(dikt, cls)

    @property
    def feed_name(self) -> str:
        """Gets the feed_name of this Kafka.


        :return: The feed_name of this Kafka.
        :rtype: str
        """
        return self._feed_name

    @feed_name.setter
    def feed_name(self, feed_name: str):
        """Sets the feed_name of this Kafka.


        :param feed_name: The feed_name of this Kafka.
        :type feed_name: str
        """

        self._feed_name = feed_name

    @property
    def kafka_topic(self) -> str:
        """Gets the kafka_topic of this Kafka.


        :return: The kafka_topic of this Kafka.
        :rtype: str
        """
        return self._kafka_topic

    @kafka_topic.setter
    def kafka_topic(self, kafka_topic: str):
        """Sets the kafka_topic of this Kafka.


        :param kafka_topic: The kafka_topic of this Kafka.
        :type kafka_topic: str
        """

        self._kafka_topic = kafka_topic

    @property
    def bootstrap_servers(self) -> str:
        """Gets the bootstrap_servers of this Kafka.


        :return: The bootstrap_servers of this Kafka.
        :rtype: str
        """
        return self._bootstrap_servers

    @bootstrap_servers.setter
    def bootstrap_servers(self, bootstrap_servers: str):
        """Sets the bootstrap_servers of this Kafka.


        :param bootstrap_servers: The bootstrap_servers of this Kafka.
        :type bootstrap_servers: str
        """

        self._bootstrap_servers = bootstrap_servers

    @property
    def dml(self) -> str:
        """Gets the dml of this Kafka.


        :return: The dml of this Kafka.
        :rtype: str
        """
        return self._dml

    @dml.setter
    def dml(self, dml: str):
        """Sets the dml of this Kafka.


        :param dml: The dml of this Kafka.
        :type dml: str
        """

        self._dml = dml
