# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class MySQL(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, feed_name: str=None, db_name: str=None, sql_query: str=None, dml: str=None):  # noqa: E501
        """MySQL - a model defined in Swagger

        :param feed_name: The feed_name of this MySQL.  # noqa: E501
        :type feed_name: str
        :param db_name: The db_name of this MySQL.  # noqa: E501
        :type db_name: str
        :param sql_query: The sql_query of this MySQL.  # noqa: E501
        :type sql_query: str
        :param dml: The dml of this MySQL.  # noqa: E501
        :type dml: str
        """
        self.swagger_types = {
            'feed_name': str,
            'db_name': str,
            'sql_query': str,
            'dml': str
        }

        self.attribute_map = {
            'feed_name': 'feedName',
            'db_name': 'dbName',
            'sql_query': 'sqlQuery',
            'dml': 'dml'
        }

        self._feed_name = feed_name
        self._db_name = db_name
        self._sql_query = sql_query
        self._dml = dml

    @classmethod
    def from_dict(cls, dikt) -> 'MySQL':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MySQL of this MySQL.  # noqa: E501
        :rtype: MySQL
        """
        return util.deserialize_model(dikt, cls)

    @property
    def feed_name(self) -> str:
        """Gets the feed_name of this MySQL.


        :return: The feed_name of this MySQL.
        :rtype: str
        """
        return self._feed_name

    @feed_name.setter
    def feed_name(self, feed_name: str):
        """Sets the feed_name of this MySQL.


        :param feed_name: The feed_name of this MySQL.
        :type feed_name: str
        """

        self._feed_name = feed_name

    @property
    def db_name(self) -> str:
        """Gets the db_name of this MySQL.


        :return: The db_name of this MySQL.
        :rtype: str
        """
        return self._db_name

    @db_name.setter
    def db_name(self, db_name: str):
        """Sets the db_name of this MySQL.


        :param db_name: The db_name of this MySQL.
        :type db_name: str
        """

        self._db_name = db_name

    @property
    def sql_query(self) -> str:
        """Gets the sql_query of this MySQL.


        :return: The sql_query of this MySQL.
        :rtype: str
        """
        return self._sql_query

    @sql_query.setter
    def sql_query(self, sql_query: str):
        """Sets the sql_query of this MySQL.


        :param sql_query: The sql_query of this MySQL.
        :type sql_query: str
        """

        self._sql_query = sql_query

    @property
    def dml(self) -> str:
        """Gets the dml of this MySQL.


        :return: The dml of this MySQL.
        :rtype: str
        """
        return self._dml

    @dml.setter
    def dml(self, dml: str):
        """Sets the dml of this MySQL.


        :param dml: The dml of this MySQL.
        :type dml: str
        """

        self._dml = dml
