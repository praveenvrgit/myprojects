---
swagger: "2.0"
info:
  description: "This is a data ingestion framework"
  version: "1.0.0"
  title: "TCS Data Management Portal"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "10.3.2.16:8080"
basePath: "/v2"
tags:
- name: "Ingestion Rule Create"
  description: "Create Ingestion Rules"
- name: "Ingestion Rule Trigger"
  description: "Trigger data ingestion"
- name: "Ingestion Rule Maintainance"
  description: "List / delete / update Ingestion Rules"
- name: "Ingestion Rule Schedule"
  description: "Schedule data ingestion"
- name: "TCS Utils"
  description: "Common Utilities"
schemes:
- "https"
- "http"
paths:
  /rules/{feedname}:
    get:
      tags:
      - "Ingestion Rule Maintainance"
      summary: "Displays information on ingestion rule"
      description: ""
      operationId: "get_feed_names_details"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "feedname"
        in: "path"
        description: "Name of ingest rule"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid ingestion rule supplied"
        404:
          description: "INgestion rule not found"
      x-swagger-router-controller: "swagger_server.controllers.ingestion_rule_maintainance_controller"
    delete:
      tags:
      - "Ingestion Rule Maintainance"
      summary: "Deletes a ingestion rule"
      description: ""
      operationId: "delete_feed_names"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "feedname"
        in: "path"
        description: "Name of ingestion rule"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid ingestion rule supplied"
        404:
          description: "INgestion rule not found"
      x-swagger-router-controller: "swagger_server.controllers.ingestion_rule_maintainance_controller"
  /rules/update:
    put:
      tags:
      - "Ingestion Rule Maintainance"
      summary: "Update ingestion rules / feed names"
      description: "Update list of ingestion rules / feed names"
      operationId: "update_feed_names"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "New KAFKA data source to be configured"
        required: true
        schema:
          $ref: "#/definitions/UpdateRule"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "not found"
        405:
          description: "Validation exception"
      x-swagger-router-controller: "swagger_server.controllers.ingestion_rule_maintainance_controller"
  /trigger/{feedname}:
    post:
      tags:
      - "Ingestion Rule Trigger"
      summary: "Trigger a data ingestion rule"
      description: ""
      operationId: "trigger_ingestion"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "feedname"
        in: "path"
        description: "Feedname for which data ingestion needs to be triggered"
        required: true
        type: "string"
      responses:
        400:
          description: "Data ingestion completed successfully"
        401:
          description: "Data ingestion failed, please check the logs.."
      x-swagger-router-controller: "swagger_server.controllers.ingestion_rule_trigger_controller"
  /create/kafka:
    post:
      tags:
      - "Ingestion Rule Create"
      summary: "Create New rules for KAFKA data ingestion"
      description: ""
      operationId: "create_new_ingestion_rules"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "New KAFKA data source to be configured"
        required: true
        schema:
          $ref: "#/definitions/Kafka"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "not found"
        405:
          description: "Validation exception"
      x-swagger-router-controller: "swagger_server.controllers.ingestion_rule_create_controller"
  /create/mySQL:
    post:
      tags:
      - "Ingestion Rule Create"
      summary: "Create New rules for MYSQL data ingestion"
      description: ""
      operationId: "create_new_my_sql_rules"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "New MYSQL data source to be configured"
        required: true
        schema:
          $ref: "#/definitions/MySQL"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "not found"
        405:
          description: "Validation exception"
      x-swagger-router-controller: "swagger_server.controllers.ingestion_rule_create_controller"
  /create/fixedWidthFlatFile:
    post:
      tags:
      - "Ingestion Rule Create"
      summary: "Create New rules for Fixed Width File data ingestion"
      description: ""
      operationId: "create_new_fixed_file_rules"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "New Fixed File data source to be configured"
        required: true
        schema:
          $ref: "#/definitions/FixedFile"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "not found"
        405:
          description: "Validation exception"
      x-swagger-router-controller: "swagger_server.controllers.ingestion_rule_create_controller"
  /create/delimitedFlatFile:
    post:
      tags:
      - "Ingestion Rule Create"
      summary: "Create New rules for Delimited File data ingestion"
      description: ""
      operationId: "create_new_delimited_file_rules"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "New Delimited File data source to be configured"
        required: true
        schema:
          $ref: "#/definitions/DelimitedFile"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "not found"
        405:
          description: "Validation exception"
      x-swagger-router-controller: "swagger_server.controllers.ingestion_rule_create_controller"
  /create/avro:
    post:
      tags:
      - "Ingestion Rule Create"
      summary: "Create New rules for AVRO File data ingestion"
      description: ""
      operationId: "create_new_avro_file_rules"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "New AVRO File data source to be configured"
        required: true
        schema:
          $ref: "#/definitions/AvroFile"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "not found"
        405:
          description: "Validation exception"
      x-swagger-router-controller: "swagger_server.controllers.ingestion_rule_create_controller"
  /create/parquet:
    post:
      tags:
      - "Ingestion Rule Create"
      summary: "Create New rules for PARQUET File data ingestion"
      description: ""
      operationId: "create_new_parquet_file_rules"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "New PARQUET File data source to be configured"
        required: true
        schema:
          $ref: "#/definitions/AvroFile"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "not found"
        405:
          description: "Validation exception"
      x-swagger-router-controller: "swagger_server.controllers.ingestion_rule_create_controller"
  /create/orc:
    post:
      tags:
      - "Ingestion Rule Create"
      summary: "Create New rules for ORC File data ingestion"
      description: ""
      operationId: "create_new_orc_file_rules"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "New ORC File data source to be configured"
        required: true
        schema:
          $ref: "#/definitions/AvroFile"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "not found"
        405:
          description: "Validation exception"
      x-swagger-router-controller: "swagger_server.controllers.ingestion_rule_create_controller"
  /create/json:
    post:
      tags:
      - "Ingestion Rule Create"
      summary: "Create New rules for JSON File data ingestion"
      description: ""
      operationId: "create_new_json_file_rules"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "New JSON File data source to be configured"
        required: true
        schema:
          $ref: "#/definitions/AvroFile"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "not found"
        405:
          description: "Validation exception"
      x-swagger-router-controller: "swagger_server.controllers.ingestion_rule_create_controller"
  /utils/predictiveAnalysis:
    post:
      tags:
      - "TCS Utils"
      summary: "Predictive Analysis Usecase for Telcom & Manufacturing industry"
      description: ""
      operationId: "predictiveAnalysis"
      produces:
      - "application/pdf"
      parameters: []
      responses:
        200:
          description: "Churn prediction completed successfully"
          schema:
            type: file
        401:
          description: "Churn prediction failed, please check the logs.."
      x-swagger-router-controller: "swagger_server.controllers.tcs_utils_controller"
definitions:
  Kafka:
    type: "object"
    properties:
      feedName:
        type: "string"
        example: "Name of the feed"
      kafkaTopic:
        type: "string"
        example: "TopicName"
      bootstrapServers:
        type: "string"
        example: "caaspoc64"
      dml:
        type: "string"
        example: "abc.json"
    xml:
      name: "Kafka"
    example:
      dml: "abc.json"
      feedName: "Name of the feed"
      kafkaTopic: "TopicName"
      bootstrapServers: "caaspoc64"
  MySQL:
    type: "object"
    properties:
      feedName:
        type: "string"
        example: "Name of the feed"
      dbName:
        type: "string"
        example: "DBName"
      sqlQuery:
        type: "string"
        example: "select * from dual"
      user:
        type: "string"
        example: "XXXXXX"
      password:
        type: "string"
        example: "XXXXXX"        
    xml:
      name: "MySQL"
    example:
      dml: "abc.json"
      sqlQuery: "select * from dual"
      feedName: "Name of the feed"
      dbName: "DBName"
  FixedFile:
    type: "object"
    properties:
      feedName:
        type: "string"
        example: "Name of the feed"
      inputFileLocation:
        type: "string"
        example: "/home/landing/abc.dat"
      inferSchema:
        type: "string"
        example: "Y/N"
      dml:
        type: "string"
        example: "abc.json"
    xml:
      name: "FixedFile"
    example:
      inputFileLocation: "/home/landing/abc.dat"
      dml: "abc.json"
      feedName: "Name of the feed"
      inferSchema: "Y/N"
  DelimitedFile:
    type: "object"
    properties:
      feedName:
        type: "string"
        example: "Name of the feed"
      inputFileLocation:
        type: "string"
        example: "/home/landing/abc.dat"
      inferSchema:
        type: "string"
        example: "Y/N"
      dml:
        type: "string"
        example: "abc.json"
      columnSeperator:
        type: "string"
        example: ",/|/^/!"
    xml:
      name: "DelimitedFile"
    example:
      inputFileLocation: "/home/landing/abc.dat"
      dml: "abc.json"
      columnSeperator: ",/|/^/!"
      feedName: "Name of the feed"
      inferSchema: "Y/N"
  AvroFile:
    type: "object"
    properties:
      feedName:
        type: "string"
        example: "Name of the feed"
      inputFileLocation:
        type: "string"
        example: "/home/landing/abc.dat"
    xml:
      name: "AvroFile"
    example:
      inputFileLocation: "/home/landing/abc.dat"
      feedName: "Name of the feed"
  UpdateRule:
    type: "object"
    properties:
      feedName:
        type: "string"
        example: "Name of the feed"
      inputFileLocation:
        type: "string"
        example: "/home/landing/abc.dat"
      fileFormat:
        type: "string"
        example: "AVRO/JSON/PARQUET/ORC"
    xml:
      name: "UpdateRule"
    example:
      inputFileLocation: "/home/landing/abc.dat"
      feedName: "Name of the feed"
      fileFormat: "AVRO/JSON/PARQUET/ORC"
