# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class DelimitedFile(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, feed_name: str=None, input_file_location: str=None, infer_schema: str=None, dml: str=None, column_seperator: str=None):  # noqa: E501
        """DelimitedFile - a model defined in Swagger

        :param feed_name: The feed_name of this DelimitedFile.  # noqa: E501
        :type feed_name: str
        :param input_file_location: The input_file_location of this DelimitedFile.  # noqa: E501
        :type input_file_location: str
        :param infer_schema: The infer_schema of this DelimitedFile.  # noqa: E501
        :type infer_schema: str
        :param dml: The dml of this DelimitedFile.  # noqa: E501
        :type dml: str
        :param column_seperator: The column_seperator of this DelimitedFile.  # noqa: E501
        :type column_seperator: str
        """
        self.swagger_types = {
            'feed_name': str,
            'input_file_location': str,
            'infer_schema': str,
            'dml': str,
            'column_seperator': str
        }

        self.attribute_map = {
            'feed_name': 'feedName',
            'input_file_location': 'inputFileLocation',
            'infer_schema': 'inferSchema',
            'dml': 'dml',
            'column_seperator': 'columnSeperator'
        }
        self._feed_name = feed_name
        self._input_file_location = input_file_location
        self._infer_schema = infer_schema
        self._dml = dml
        self._column_seperator = column_seperator

    @classmethod
    def from_dict(cls, dikt) -> 'DelimitedFile':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DelimitedFile of this DelimitedFile.  # noqa: E501
        :rtype: DelimitedFile
        """
        return util.deserialize_model(dikt, cls)

    @property
    def feed_name(self) -> str:
        """Gets the feed_name of this DelimitedFile.


        :return: The feed_name of this DelimitedFile.
        :rtype: str
        """
        return self._feed_name

    @feed_name.setter
    def feed_name(self, feed_name: str):
        """Sets the feed_name of this DelimitedFile.


        :param feed_name: The feed_name of this DelimitedFile.
        :type feed_name: str
        """

        self._feed_name = feed_name

    @property
    def input_file_location(self) -> str:
        """Gets the input_file_location of this DelimitedFile.


        :return: The input_file_location of this DelimitedFile.
        :rtype: str
        """
        return self._input_file_location

    @input_file_location.setter
    def input_file_location(self, input_file_location: str):
        """Sets the input_file_location of this DelimitedFile.


        :param input_file_location: The input_file_location of this DelimitedFile.
        :type input_file_location: str
        """

        self._input_file_location = input_file_location

    @property
    def infer_schema(self) -> str:
        """Gets the infer_schema of this DelimitedFile.


        :return: The infer_schema of this DelimitedFile.
        :rtype: str
        """
        return self._infer_schema

    @infer_schema.setter
    def infer_schema(self, infer_schema: str):
        """Sets the infer_schema of this DelimitedFile.


        :param infer_schema: The infer_schema of this DelimitedFile.
        :type infer_schema: str
        """

        self._infer_schema = infer_schema

    @property
    def dml(self) -> str:
        """Gets the dml of this DelimitedFile.


        :return: The dml of this DelimitedFile.
        :rtype: str
        """
        return self._dml

    @dml.setter
    def dml(self, dml: str):
        """Sets the dml of this DelimitedFile.


        :param dml: The dml of this DelimitedFile.
        :type dml: str
        """

        self._dml = dml

    @property
    def column_seperator(self) -> str:
        """Gets the column_seperator of this DelimitedFile.


        :return: The column_seperator of this DelimitedFile.
        :rtype: str
        """
        return self._column_seperator

    @column_seperator.setter
    def column_seperator(self, column_seperator: str):
        """Sets the column_seperator of this DelimitedFile.


        :param column_seperator: The column_seperator of this DelimitedFile.
        :type column_seperator: str
        """

        self._column_seperator = column_seperator
